<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>JavaScript on nategeslin.com</title>
    <link>http://localhost:1313/tags/javascript/</link>
    <description>Recent content in JavaScript on nategeslin.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 22 Nov 2021 06:00:00 +0000</lastBuildDate><atom:link href="http://localhost:1313/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Why We Use Layered HTML Canvases At OpenScope</title>
      <link>http://localhost:1313/posts/why-we-use-layered-html-canvases-at-openscope/</link>
      <pubDate>Mon, 22 Nov 2021 06:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/why-we-use-layered-html-canvases-at-openscope/</guid>
      <description>OpenScope Air Traffic Control Simulator
For several years, I was an active maintainer of a project called OpenScope. OpenScope is a browser-based air traffic control simulator driven by JavaScript, HTML canvas, and json. There is no back end, it’s all done in the browser. It’s also open source, anybody can contribute as long as you follow the guidelines and can speak aviation.
Problem When I first started contributing to the project, there were issues with performance.</description>
    </item>
    
    <item>
      <title>Write Tests With Sentences First, Code Second</title>
      <link>http://localhost:1313/posts/write-tests-with-sentences-first-code-second/</link>
      <pubDate>Fri, 05 Nov 2021 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/write-tests-with-sentences-first-code-second/</guid>
      <description>Photo by Ben White on Unsplash
Problem In software, naming is often said to be one of the hardest parts. From what I’ve seen, writing tests is right up there too! I see people struggle with tests all the time. They get overwhelmed or frustrated and just skip it, which is a bad thing for everybody.
Naming is hard because developers are rarely given a guide to naming. Over time, they learn tips and tricks and develop strategies to make naming easier.</description>
    </item>
    
    <item>
      <title>Use React and Feature Flags To Roll Out New UI Components</title>
      <link>http://localhost:1313/posts/use-react-and-feature-flags-to-roll-out-new-ui-components/</link>
      <pubDate>Sat, 30 Oct 2021 05:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/use-react-and-feature-flags-to-roll-out-new-ui-components/</guid>
      <description>Recently, at Parallax, my team and I released a sweeping update to our user interface. We updated buttons, inputs, selects, dialogs, and many other visual elements. What follows is an explanation of one small part of that effort.
 Problem In the summer of 2021, my team and I were presented with a few interesting challenges. The next set of work would entail:
 Update many of our shared components with new styles (buttons, inputs, selects, dialogs, etc) Many of these updates would affect design, but we would also take the opportunity to slim down component APIs We should plan on not being able to release everything at once.</description>
    </item>
    
  </channel>
</rss>
